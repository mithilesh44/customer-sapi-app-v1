<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">

	<flow name="post-customer-registration-implimentationFlow"
		doc:id="062a0dd2-a975-44fd-a75d-55c3330ddd18">
		<ee:transform doc:name="Transform Message to Create SFDC Request for  payload for Registration"
			doc:id="d3ca7df8-1e71-4803-90e3-6392cb9574aa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[{
"contactType__c": payload.registrationRequest.contactType,
    "countryCode__c": payload.registrationRequest.countryCode,
    "mobile__c": payload.registrationRequest.mobile,
    "password__c": payload.registrationRequest.password,
    "acceptDataPolicy__c": if(payload.registrationRequest.acceptDataPolicy == true)("true")else("false"),
    "receivedNews__c": if(payload.registrationRequest.receivedNews == true)("true")else("false"),
    "acceptPic__c": if(payload.registrationRequest.acceptPic == true)("true")else("false"),
    "locale__c": payload.registrationRequest.locale,
    "captchaToken__c": payload.registrationRequest.captchaToken,
    "recieveClaimsettle__c": if(payload.registrationRequest.recieveClaimsettle == true)("true")else("false")
    }]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Request Logger for SFDC call" doc:id="40df70dd-9208-4a3f-a575-5637b5d0fdb7" message="#[%dw 2.0&#10;output application/json indent = false&#10;---&#10;{&#10; TimeStamp: vars.requestTime_var,&#10; transactionId: vars.headers.'x-cms-transactionId',&#10; AppName: app.name, FlowName: flow.name,&#10; BusinessProcessName: &quot;Customer Registration&quot;,&#10; category: &quot;Customer&quot;,&#10; OriginatingApplication: &quot;Process API&quot;,&#10; DesinationApplication: &quot;Salesforce&quot;,&#10; CustomerId: &quot;NA&quot;,&#10; txnState: &quot;SFDC Request&quot;&#10; }]"/>
		<salesforce:create doc:name="Create call to SFDC `Registration Object To Insert Registration Data" doc:id="7d737a86-81b2-489c-871f-145b8508a9d2" config-ref="Salesforce_Config" type="registration__c"/>
		<logger level="INFO" doc:name="Response Logger for SFDC call" doc:id="506e04f7-e360-4288-ac38-7cd4b8b1939c" message="#[%dw 2.0&#10;output application/json indent = false&#10;---&#10;{&#10;  TimeStamp: now(),&#10;  transactionId: vars.headers.'x-cms-transactionId',&#10;  AppName: app.name,&#10;  FlowName: flow.name,&#10;   BusinessProcessName: &quot;Customer Registration&quot;,&#10; category: &quot;Customer&quot;,&#10; OriginatingApplication: &quot;Process API&quot;,&#10; DesinationApplication: &quot;Salesforce&quot;,&#10; CustomerId: &quot;NA&quot;,&#10; txnState: &quot;SFDC Response&quot;&#10; }]"/>
		<ee:transform doc:name="Transform Message to Create registration SAPI Response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  registrationResponse: {
    eventInstanceId: vars.headers.'x-cms-transactionId',
    status: "success"
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
	
	</flow>
</mule>
